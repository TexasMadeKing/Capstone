[{"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\App.js":"1","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Task\\TaskList.js":"2","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Task\\TaskForm.js":"3","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Task\\Task.js":"4","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\index.js":"5","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\NavBar.js":"6","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\serviceWorker.js":"7","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\react-auth0-spa.js":"8","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\ExternalApi.js":"9","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Profile.js":"10","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\PrivateRoute.js":"11","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\pages\\home.js":"12"},{"size":831,"mtime":1664467254108,"results":"13","hashOfConfig":"14"},{"size":1195,"mtime":1664435517983,"results":"15","hashOfConfig":"14"},{"size":1410,"mtime":1664436438307,"results":"16","hashOfConfig":"14"},{"size":1207,"mtime":1664466540093,"results":"17","hashOfConfig":"14"},{"size":834,"mtime":1664467025425,"results":"18","hashOfConfig":"14"},{"size":1085,"mtime":1664468228109,"results":"19","hashOfConfig":"14"},{"size":5086,"mtime":1664429228785,"results":"20","hashOfConfig":"14"},{"size":2937,"mtime":1664429228784,"results":"21","hashOfConfig":"14"},{"size":1307,"mtime":1664462484224,"results":"22","hashOfConfig":"14"},{"size":561,"mtime":1664429228782,"results":"23","hashOfConfig":"14"},{"size":792,"mtime":1664429228782,"results":"24","hashOfConfig":"14"},{"size":127,"mtime":1664466787151,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"z7qq4",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\App.js",["72"],[],"import React from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport ExternalApi from \"./components/ExternalApi\";\r\n//import { useAuth0 } from \"./react-auth0-spa\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\n\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"./components/Profile\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* New - use BrowserRouter to provide access to /profile */}\r\n      <BrowserRouter>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Switch>\r\n          <Route path=\"/\" exact />\r\n          <PrivateRoute path=\"/profile\" component={Profile} />\r\n          <PrivateRoute path=\"/external-api\" component={ExternalApi} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Task\\TaskList.js",["73"],[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Task\\TaskForm.js",["74"],[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Task\\Task.js",["75"],[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\index.js",["76"],[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\NavBar.js",["77"],[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\serviceWorker.js",["78"],[],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",[],"C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\react-auth0-spa.js",["79"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n    window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n    children,\r\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n    ...initOptions\r\n}) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState();\r\n    const [user, setUser] = useState();\r\n    const [auth0Client, setAuth0] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initAuth0 = async () => {\r\n            const auth0FromHook = await createAuth0Client(initOptions);\r\n            setAuth0(auth0FromHook);\r\n\r\n            if (window.location.search.includes(\"code=\")) {\r\n                const { appState } = await auth0FromHook.handleRedirectCallback();\r\n                onRedirectCallback(appState);\r\n            }\r\n\r\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n            setIsAuthenticated(isAuthenticated);\r\n\r\n            if (isAuthenticated) {\r\n                const user = await auth0FromHook.getUser();\r\n                setUser(user);\r\n            }\r\n\r\n            setLoading(false);\r\n        };\r\n        initAuth0();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const loginWithPopup = async (params = {}) => {\r\n        setPopupOpen(true);\r\n        try {\r\n            await auth0Client.loginWithPopup(params);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setPopupOpen(false);\r\n        }\r\n        const user = await auth0Client.getUser();\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const handleRedirectCallback = async () => {\r\n        setLoading(true);\r\n        await auth0Client.handleRedirectCallback();\r\n        const user = await auth0Client.getUser();\r\n        setLoading(false);\r\n        setIsAuthenticated(true);\r\n        setUser(user);\r\n    };\r\n    return (\r\n        <Auth0Context.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                user,\r\n                loading,\r\n                popupOpen,\r\n                loginWithPopup,\r\n                handleRedirectCallback,\r\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n                logout: (...p) => auth0Client.logout(...p)\r\n            }}\r\n        >\r\n            {children}\r\n        </Auth0Context.Provider>\r\n    );\r\n};","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\ExternalApi.js",["80"],[],"import React, { useState } from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport axios from \"axios\";\r\n\r\nconst ExternalApi = () => {\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [apiMessage, setApiMessage] = useState(\"\");\r\n    const { getTokenSilently } = useAuth0();\r\n\r\n\r\n    const callApi = async () => {\r\n        try {\r\n            const token = await getTokenSilently();\r\n\r\n            const response = await axios.get(\"http://localhost:5000/task\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            const responseData = await response.data;\r\n\r\n            setShowResult(true);\r\n            setApiMessage(response.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>External API</h1>\r\n            <p>\r\n                This page demonstrates how to make a call to an external API.\r\n        </p>\r\n            <button onClick={callApi}>Ping API</button>\r\n            {showResult && (\r\n                <code>\r\n                    <pre>{JSON.stringify(apiMessage, null, 2)}</pre>\r\n                </code>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExternalApi;","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\Profile.js",["81"],[],"import React, { Fragment } from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst Profile = () => {\r\n    const { loading, user } = useAuth0();\r\n    console.log(user)\r\n\r\n    if (loading || !user) {\r\n        return (\r\n            <div>Loading...</div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <img src={user.picture} alt=\"Profile\" />\r\n\r\n            <h2>{user.name}</h2>\r\n            <p>{user.email}</p>\r\n            <code>{JSON.stringify(user, null, 2)}</code>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\PrivateRoute.js",["82"],[],"import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        if (loading || isAuthenticated) {\r\n            return;\r\n        }\r\n        const fn = async () => {\r\n            await loginWithRedirect({\r\n                appState: { targetUrl: path }\r\n            });\r\n        };\r\n        fn();\r\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n    const render = props => isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n    return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\src\\components\\pages\\home.js",["83"],[],"import React from 'react'\r\n\r\nexport default function task() {\r\n  return (\r\n    <div>\r\n      <h1>Task</h1>\r\n    </div>\r\n  )\r\n}\r\n",[],{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"85"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},{"ruleId":null,"fatal":true,"severity":2,"message":"84"},"Parsing error: Plugin/Preset files are not allowed to export objects, only functions. In C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\babel-preset-react\\lib\\index.js","Parsing error: Cannot find module 'babel-preset-react'\nRequire stack:\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\@babel\\core\\lib\\config\\files\\plugins.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\@babel\\core\\lib\\config\\files\\index.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\@babel\\core\\lib\\index.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\@rollup\\plugin-babel\\dist\\index.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\workbox-build\\build\\lib\\bundle.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\workbox-webpack-plugin\\build\\generate-sw.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\workbox-webpack-plugin\\build\\index.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\react-scripts\\config\\webpack.config.js\n- C:\\Users\\JOSHB\\Desktop\\Capstone\\capstone-front\\node_modules\\react-scripts\\scripts\\start.js\n- If you want to resolve \"react\", use \"module:react\"\n- Did you mean \"@babel/react\"?"]